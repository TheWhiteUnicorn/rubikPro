#pragma once
#include <iostream>
#include "opencv2/imgproc.hpp"
#include "opencv2/highgui.hpp"

using namespace cv;
using namespace std;

struct RubickColors
{
	Scalar colors[6][3][3];
};

// Рамка области распознавания
const vector<Point> frame = { { 420, 120 },{ 220, 320 }};
const Rect box = boundingRect(frame);

// Класс начального распознавания
class InitialRecogniser
{
	VideoCapture *cap;

	// Это массив, который нужно заполнять с каждым вызовом
	RubickColors rawColors;
	// 

	// Вспомогательные функции
	void preprocessing(Mat &image);
	double angle(Point pt1, Point pt2, Point pt0);

	void properSquaresArrangement();
public:
	// К-тор
	InitialRecogniser();

	// Функция подготовки к работе, открывет камеру
	int ready();

	// Заполнить массив цветов rawColors для определенной грани
	void fillSquares(int edgeShow);

	// Найти 9 наклеек на изображении
	void findSquares(Mat & image, vector<vector<Point>>& squares);

	// Отрисовать квадратики, соответствующие наклейкам в изображении
	void drawSquares(Mat & image, const vector<vector<Point>>& squares);

	// Показать кадр
	void showFrame();
	
};